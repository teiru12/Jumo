<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="event">

<!-- selectEventId -->
<select id="selectEventId" parameterType="String" resultType="jumo.model.JUMO_EVENT">
	select *
	from 
		JUMO_EVENT
	WHERE
		EMAIL = #{EMAIL}
</select>

<!-- pointIdListPaging -->
<select id="pointIdListPaging" parameterType="hashmap" resultType="hashmap">
	select * 
	from (
		select
			 POINT_KEY, EMAIL, JUMO_POINT, RULLETDATE, ROWNUM R
		from (
			select
				 POINT_KEY, EMAIL, JUMO_POINT, RULLETDATE
			from 
				JUMO_POINT
			where 
				EMAIL = #{EMAIL}
			order by RULLETDATE DESC
		)
		order by R ASC
	)
	where
		R between #{START} and #{END}
</select>

<!-- pointIdListSearchPaging -->
<select id="pointIdListSearchPaging" parameterType="hashmap" resultType="hashmap">
	select * 
	from (
		select
			 POINT_KEY, EMAIL, JUMO_POINT, RULLETDATE, ROWNUM R
		from (
			select
				 POINT_KEY, EMAIL, JUMO_POINT, RULLETDATE
			from 
				JUMO_POINT
			where 
				EMAIL = #{EMAIL}
				and
				RULLETDATE BETWEEN #{MINDATE} AND #{MAXDATE}
			order by RULLETDATE DESC
		)
		order by R ASC
	)
	where
		R between #{START} and #{END}
</select>

<!-- pointIdCount -->
<select id="pointIdCount" parameterType="String" resultType="int">
	select
		count(*)
	from
		JUMO_POINT
	where
		EMAIL = #{EMAIL}
</select>

<!-- pointIdSearchCount -->
<select id="pointIdSearchCount" parameterType="hashmap" resultType="int">
	select
		count(*)
	from 
		JUMO_POINT
	where 
		EMAIL = #{EMAIL}
		and
		RULLETDATE BETWEEN #{MINDATE} AND #{MAXDATE}
</select>

<!-- insertPointId -->
<insert id="insertPointId" parameterType="jumo.model.JUMO_EVENT">
	insert into
		JUMO_EVENT
	values(
		EVENT_KEY_SEQ.NEXTVAL,
		#{EMAIL},
		#{JUMO_POINT},
		'N',
		'N',
		'N',
		'N',
		'N',
		'00000000'
	)
</insert>

<!-- updatePointId -->
<update id="updatePointId" parameterType="jumo.model.JUMO_EVENT">
	update
		JUMO_EVENT
	set
		JUMO_POINT = #{JUMO_POINT}
	where 
		EMAIL = #{EMAIL}
</update>

<!-- updateCouponId -->
<update id="updateCouponId" parameterType="jumo.model.JUMO_EVENT">
	update
		JUMO_EVENT
	set
		COUPON1K = #{COUPON1K},
		COUPON2K = #{COUPON2K},
		COUPON3K = #{COUPON3K},
		COUPON5K = #{COUPON5K},
		COUPON10K = #{COUPON10K}
	where 
		EMAIL = #{EMAIL}
</update>

<!-- updateRulletdateId -->
<update id="updateRulletdateId" parameterType="jumo.model.JUMO_EVENT">
	update
		JUMO_EVENT
	set
		RULLETDATE = #{RULLETDATE}
	where 
		EMAIL = #{EMAIL}
</update>

<!-- selectPaymentOID -->
<select id="selectPaymentOID" parameterType="int" resultType="jumo.model.Payment">
	select
		*
	from
		PAYMENT
	where
		OID = #{OID}
</select>

<!-- selectPaymentOBNUMBER -->
<select id="selectPaymentOBNUMER" parameterType="int" resultType="jumo.model.Payment">
	select
		*
	from
		PAYMENT
	where
		OBNUMBER = #{OBNUMBER}
</select>

<!-- insertPayment -->
<insert id="insertPayment" parameterType="jumo.model.Payment">
	insert into
		PAYMENT
	values(
		PAYMENTIDX_SEQ.NEXTVAL,
		<if test="OID == -1">
			null,
		</if>
		<if test="OID != -1">
			#{OID},
		</if>
		<if test="OBNUMBER == -1">
			null,
		</if>
		<if test="OBNUMBER != -1">
			#{OBNUMBER},
		</if>
		#{TOTALSUM},
		#{TOTALPAYMENT},
		#{COUPON},
		#{POINT}
	)
</insert>

<!-- selectLastJumoPointID -->
<select id="selectLastJumoPointID" parameterType="String" resultType="jumo.model.JUMO_POINT">
	select
		*
	from
		JUMO_POINT
	where 
		POINT_KEY =
		(
			select 
				MAX(POINT_KEY)
			from
				JUMO_POINT
			where
				EMAIL = #{EMAIL}
		)
</select>

<!-- insertJumoPointID : JUMO_POINT 테이블에 입력 -->
<insert id="insertJumoPointID" parameterType="jumo.model.JUMO_POINT">
	insert into
		JUMO_POINT
	values(
		POINT_KEY_SEQ.NEXTVAL,
		#{EMAIL},
		#{JUMO_POINT},
		#{RULLETDATE}
	)
</insert>

</mapper>